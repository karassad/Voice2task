import json

from telegram import Update, Voice
from telegram.ext import ContextTypes
from utils.transcriber import transcribe_audio
from utils.audio import convert_ogg_to_wav
from utils.gpt_parser import parse_task_to_event


"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π Telegram-–±–æ—Ç–∞.
–ü–æ–ª—É—á–∞–µ—Ç voice.ogg, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ .wav, –ø–µ—Ä–µ–¥–∞—ë—Ç –≤ Whisper –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
"""
async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        1. –°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª .ogg
        2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ .wav —á–µ—Ä–µ–∑ ffmpeg
        3. –†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ä–µ—á—å —á–µ—Ä–µ–∑ Whisper
        4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """

    voice: Voice = update.message.voice
    file = await context.bot.get_file(voice.file_id) #–ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    await  file.download_to_drive('voice.ogg') #–°–∫–∞—á–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    convert_ogg_to_wav("voice.ogg", "voice.wav")
    text = transcribe_audio("voice.wav")

    await  update.message.reply_text(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{text}")

    try:
        event = parse_task_to_event(text) #–ø–æ–ª—É—á—á–∞–µ–º –ø–∏—Ç–æ–Ω —Å–ª–æ–≤–∞—Ä—å
        formatted = json.dumps(event, indent=2, ensure_ascii=False) #–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–≥–æ –≤ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é JSON-—Å—Ç—Ä–æ–∫—É
        await update.message.reply_text(f"üìÖ –ó–∞–¥–∞—á–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞:\n<pre>{formatted}</pre>", parse_mode="HTML")
    except Exception as e:
        await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–±—ã—Ç–∏—è.")