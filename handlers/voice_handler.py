import json
from telegram import Update, Voice
from telegram.ext import ContextTypes

from flow.event_flow import EventCreationFlow
from services.transcriber import Transcriber
from services.gpt_parser import TaskParser
from utils.audio import convert_ogg_to_wav


"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π Telegram-–±–æ—Ç–∞.
–ü–æ–ª—É—á–∞–µ—Ç voice.ogg, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ .wav, –ø–µ—Ä–µ–¥–∞—ë—Ç –≤ Whisper –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
"""
class VoiceHandler:

    def __init__(self, transcriber: Transcriber, parser: TaskParser, flow: EventCreationFlow):
        self.transcriber = transcriber
        self.parser = parser
        self.flow = flow

    async def handle_voice(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
            –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
            1. –°–∫–∞—á–∏–≤–∞–µ—Ç .ogg
            2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ .wav
            3. –†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ç–µ–∫—Å—Ç
            4. –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∑–∞–¥–∞—á—É
            5. –ü–µ—Ä–µ–¥–∞—ë—Ç –µ—ë –≤ EventCreationFlow
        """

        voice: Voice = update.message.voice
        file = await context.bot.get_file(voice.file_id) #–ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        await  file.download_to_drive('voice.ogg') #–°–∫–∞—á–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        convert_ogg_to_wav("voice.ogg", "voice.wav")
        text = self.transcriber.transcribe("voice.wav")

        await  update.message.reply_text(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{text}")

        try:
            event = self.parser.parse(text) #–ø–æ–ª—É—á—á–∞–µ–º –ø–∏—Ç–æ–Ω —Å–ª–æ–≤–∞—Ä—å
            formatted = json.dumps(event, indent=2, ensure_ascii=False) #–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–≥–æ –≤ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é JSON-—Å—Ç—Ä–æ–∫—É

            await update.message.reply_text(
                f"üìÖ –ó–∞–¥–∞—á–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞:\n<pre>{formatted}</pre>",
                parse_mode="HTML"
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è–º–∏
            await self.flow.start(update, context, event)

        except Exception as e:
            import traceback
            traceback.print_exc()  # –ø–æ–∫–∞–∂–µ—Ç –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª–∏
            await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è.")